/* Implement an algorithm to find the nth to last element of a singly linked list. */


    public Item findNthToLast(int index){
        Node p1 = topElement;
        Node p2 = topElement;

        for (int j = 0; j < index ; j++) { // make then i nodes apart.
            if (p2 == null) {
                return null;
            }
            p2 = p2.next;
        }
        while (p2 != null) { // move till p2 goes past the end of the list.
            p1 = p1.next;
            p2 = p2.next;
        }
        return p1.digit;
    }


    public static void main(String[] args) {
        LinkedList<Integer> list1 = new LinkedList<Integer>();
        list1.addFirst(2);
        list1.addFirst(9);
        list1.addFirst(5);
        list1.addFirst(1);
        list1.addFirst(3);
        list1.addFirst(4);

        LinkedList<String> list2 = new LinkedList<String>();
        list2.addFirst("A");
        list2.addFirst("R");
        list2.addFirst("I");

        System.out.println(list1);
        System.out.println(list2);
        System.out.println(list1.findNthToLast(2));
        System.out.println(list1.findNthToLast(3));
        System.out.println(list1.findNthToLast(6));
        System.out.println(list1.findNthToLast(7));
        System.out.println(list2.findNthToLast(2));

    }
}
